{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/VoerroTagsInput.vue","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///src/VoerroTagsInput.vue","webpack:///./src/VoerroTagsInput.vue?f632","webpack:///./src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","_obj","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","class","wrapperClass","isActive","_l","tag","index","domProps","_s","_v","attrs","on","$event","preventDefault","removeTag","directives","rawName","expression","hideInputField","ref","placeholder","type","indexOf","_k","keyCode","tagFromInput","removeLastTag","nextSearchResult","prevSearchResult","onKeyDown","onKeyUp","clearSearchResults","onFocus","onClick","onBlur","tags","target","composing","input","elementId","hiddenInput","_e","searchResults","typeaheadStyle","typeaheadHideDiscard","discardSearchText","searchSelection","tagFromSearchOnClick","window","VoerroTagsInput"],"mappings":"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","file":"voerro-vue-tagsinput.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { render, staticRenderFns } from \"./VoerroTagsInput.vue?vue&type=template&id=7e01827c&\"\nimport script from \"./VoerroTagsInput.vue?vue&type=script&lang=js&\"\nexport * from \"./VoerroTagsInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","<template>\n    <div class=\"tags-input-root\" style=\"position: relative;\">\n        <div :class=\"{\n            [wrapperClass + ' tags-input']: true,\n            'active': isActive,\n        }\">\n            <span class=\"tags-input-badge tags-input-badge-pill tags-input-badge-selected-default\"\n                v-for=\"(tag, index) in tags\"\n                :key=\"index\"\n            >\n                <span v-html=\"tag.value\"></span>\n\n                <a href=\"#\"\n                    class=\"tags-input-remove\"\n                    @click.prevent=\"removeTag(index)\"></a>\n            </span>\n\n            <input type=\"text\"\n                ref=\"taginput\"\n                :placeholder=\"placeholder\"\n                v-model=\"input\"\n                v-show=\"!hideInputField\"\n                @keydown.enter.prevent=\"tagFromInput(false)\"\n                @keydown.8=\"removeLastTag\"\n                @keydown.down=\"nextSearchResult\"\n                @keydown.up=\"prevSearchResult\"\n                @keydown=\"onKeyDown\"\n                @keyup=\"onKeyUp\"\n                @keyup.esc=\"clearSearchResults\"\n                @focus=\"onFocus\"\n                @click=\"onClick\"\n                @blur=\"onBlur\"\n                @value=\"tags\">\n\n            <input type=\"hidden\" v-if=\"elementId\"\n                :name=\"elementId\"\n                :id=\"elementId\"\n                v-model=\"hiddenInput\">\n        </div>\n\n        <!-- Typeahead/Autocomplete -->\n        <div v-show=\"searchResults.length\">\n            <p v-if=\"typeaheadStyle === 'badges'\" :class=\"`typeahead-${typeaheadStyle}`\">\n                <span v-if=\"!typeaheadHideDiscard\" class=\"tags-input-badge typeahead-hide-btn tags-input-typeahead-item-default\"\n                    @click.prevent=\"clearSearchResults(true)\"\n                    v-text=\"discardSearchText\"></span>\n\n                <span v-for=\"(tag, index) in searchResults\"\n                    :key=\"index\"\n                    v-html=\"tag.value\"\n                    @mouseover=\"searchSelection = index\"\n                    @mousedown.prevent=\"tagFromSearchOnClick(tag)\"\n                    class=\"tags-input-badge\"\n                    v-bind:class=\"{\n                        'tags-input-typeahead-item-default': index != searchSelection,\n                        'tags-input-typeahead-item-highlighted-default': index == searchSelection\n                    }\"></span>\n            </p>\n\n            <ul v-else-if=\"typeaheadStyle === 'dropdown'\" :class=\"`typeahead-${typeaheadStyle}`\">\n                <li v-if=\"!typeaheadHideDiscard\" class=\"tags-input-typeahead-item-default typeahead-hide-btn\"\n                    @click.prevent=\"clearSearchResults(true)\"\n                    v-text=\"discardSearchText\"></li>\n\n                <li v-for=\"(tag, index) in searchResults\"\n                :key=\"index\"\n                v-html=\"tag.value\"\n                @mouseover=\"searchSelection = index\"\n                @mousedown.prevent=\"tagFromSearchOnClick(tag)\"\n                v-bind:class=\"{\n                    'tags-input-typeahead-item-default': index != searchSelection,\n                    'tags-input-typeahead-item-highlighted-default': index == searchSelection\n                }\"></li>\n            </ul>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        elementId: String,\n\n        existingTags: {\n            type: Array,\n            default: () => {\n                return [];\n            }\n        },\n\n        value: {\n            type: Array,\n            default: () => {\n                return [];\n            }\n        },\n\n        typeahead: {\n            type: Boolean,\n            default: false\n        },\n\n        typeaheadStyle: {\n            type: String,\n            default: 'badges'\n        },\n\n        typeaheadActivationThreshold: {\n            type: Number,\n            default: 1\n        },\n\n        typeaheadMaxResults: {\n            type: Number,\n            default: 0\n        },\n\n        typeaheadAlwaysShow: {\n            type: Boolean,\n            default: false\n        },\n\n        typeaheadShowOnFocus: {\n            type: Boolean,\n            default: true\n        },\n\n        typeaheadHideDiscard: {\n            type: Boolean,\n            default: false\n        },\n\n        typeaheadUrl: {\n            type: String,\n            default: ''\n        },\n\n        placeholder: {\n            type: String,\n            default: 'Add a tag'\n        },\n        \n        discardSearchText: {\n            type: String,\n            default: 'Discard Search Results'\n        },\n\n        limit: {\n            type: Number,\n            default: 0\n        },\n\n        hideInputOnLimit: {\n            type: Boolean,\n            default: false\n        },\n\n        onlyExistingTags: {\n            type: Boolean,\n            default: false\n        },\n\n        deleteOnBackspace: {\n            type: Boolean,\n            default: true\n        },\n\n        allowDuplicates: {\n            type: Boolean,\n            default: false\n        },\n        \n        validate: {\n            type: Function,\n            default: () => true\n        },\n\n        addTagsOnComma: {\n            type: Boolean,\n            default: false\n        },\n\n        addTagsOnSpace: {\n            type: Boolean,\n            default: false\n        },\n\n        addTagsOnBlur: {\n            type: Boolean,\n            default: false\n        },\n\n        wrapperClass: {\n            type: String,\n            default: 'tags-input-wrapper-default'\n        },\n\n        sortSearchResults: {\n            type: Boolean,\n            default: true\n        },\n\n        caseSensitiveTags: {\n            type: Boolean,\n            default: false\n        },\n\n        beforeAddingTag: {\n            type: Function,\n            default: () => true\n        },\n\n        beforeRemovingTag: {\n            type: Function,\n            default: () => true\n        },\n    },\n\n    data() {\n        return {\n            badgeId: 0,\n            tags: [],\n\n            input: '',\n            oldInput: '',\n            hiddenInput: '',\n\n            searchResults: [],\n            searchSelection: 0,\n\n            selectedTag: -1,\n\n            isActive: false,\n        };\n    },\n\n    created () {\n        this.tagsFromValue();\n\n        if (this.typeaheadAlwaysShow) {\n            this.searchTag(false);\n        }\n    },\n\n    mounted () {\n        // Emit an event\n        this.$emit('initialized');\n        \n        document.addEventListener('click', (e) => {\n            if (e.target !== this.$refs['taginput']) {\n                this.clearSearchResults();\n            }\n        });\n    },\n\n    computed: {\n        hideInputField() {\n            return (this.hideInputOnLimit && this.limit > 0 && this.tags.length >= this.limit);\n        }\n    },\n\n    watch: {\n        input(newVal, oldVal) {\n            this.searchTag(false);\n\n            if (newVal.length && newVal != oldVal) {\n                const diff = newVal.substring(oldVal.length, newVal.length);\n\n                if (this.addTagsOnSpace) {\n                    if (newVal.endsWith(' ')) {\n                        // The space shouldn't actually be inserted\n                        this.input = newVal.trim();\n\n                        // Add the inputed tag\n                        this.tagFromInput(true);\n                    }\n                }\n\n                if (this.addTagsOnComma) {\n                    newVal = newVal.trim();\n\n                    if (newVal.endsWith(',')) {\n                        // The comma shouldn't actually be inserted\n                        this.input = newVal.substring(0, newVal.length - 1);\n\n                        // Add the inputed tag\n                        this.tagFromInput(true);\n                    }\n                }\n\n                this.$emit('change', newVal);\n            }\n        },\n\n        tags() {\n            // Updating the hidden input\n            this.hiddenInput = JSON.stringify(this.tags);\n\n            // Update the bound v-model value\n            this.$emit('input', this.tags);\n        },\n\n        value() {\n            this.tagsFromValue();\n        },\n\n        typeaheadAlwaysShow(newValue) {\n            if (newValue) {\n                this.searchTag(false);\n            } else {\n                this.clearSearchResults();\n            }\n        },\n    },\n\n    methods: {\n        /**\n         * Remove reserved regex characters from a string so that they don't\n         * affect search results\n         * \n         * @param string\n         * @returns String\n         */\n        escapeRegExp(string) {\n            return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        },\n\n        /**\n         * Add a tag whether from user input or from search results (typeahead)\n         * \n         * @param ignoreSearchResults\n         * @returns void\n         */\n        tagFromInput(ignoreSearchResults = false) {\n            // If we're choosing a tag from the search results\n            if (this.searchResults.length && this.searchSelection >= 0 && !ignoreSearchResults) {\n                this.tagFromSearch(this.searchResults[this.searchSelection]);\n\n                this.input = '';\n            } else {\n                // If we're adding an unexisting tag\n                let text = this.input.trim();\n\n                // If the new tag is not an empty string and passes validation\n                if (!this.onlyExistingTags && text.length && this.validate(text)) {\n                    this.input = '';\n\n                    // Determine if the inputted tag exists in the existingTags\n                    // array\n                    let newTag = {\n                        key: '',\n                        value: text,\n                    };\n\n                    const searchQuery = this.escapeRegExp(\n                        this.caseSensitiveTags\n                            ? newTag.value\n                            : newTag.value.toLowerCase()\n                    );\n\n                    for (let tag of this.existingTags) {\n                        const compareable = this.caseSensitiveTags\n                            ? tag.value\n                            : tag.value.toLowerCase();\n\n                        if (searchQuery === compareable) {\n                            newTag = Object.assign({}, tag);\n\n                            break;\n                        }\n                    }\n\n                    this.addTag(newTag);\n                }\n            }\n        },\n\n        /**\n         * Add a tag from search results when a user clicks on it\n         * \n         * @param tag\n         * @returns void\n         */\n        tagFromSearchOnClick(tag) {\n            this.tagFromSearch(tag);\n\n            this.$refs['taginput'].blur();\n        },\n\n        /**\n         * Add the selected tag from the search results.\n         * Clear search results.\n         * Clear user input.\n         * \n         * @param tag\n         * @return void\n         */\n        tagFromSearch(tag) {\n            this.clearSearchResults();\n            this.addTag(tag);\n\n            this.$nextTick(() => {\n                this.input = '';\n                this.oldInput = '';\n            });\n        },\n\n        /**\n         * Add/Select a tag\n         * \n         * @param tag\n         * @returns void | Boolean\n         */\n        addTag(tag) {\n            if (!this.beforeAddingTag(tag)) {\n                return false;\n            }\n\n            // Check if the limit has been reached\n            if (this.limit > 0 && this.tags.length >= this.limit) {\n                this.$emit('limit-reached');\n\n                return false;\n            }\n\n            // Attach the tag if it hasn't been attached yet\n            if (!this.tagSelected(tag)) {\n                this.tags.push(tag);\n\n                // Emit events\n                this.$nextTick(() => {\n                    this.$emit('tag-added', tag);\n                    this.$emit('tags-updated');\n                });\n            }\n        },\n\n        /**\n         * Remove the last tag in the tags array.\n         * \n         * @returns void\n         */\n        removeLastTag() {\n            if (!this.input.length && this.deleteOnBackspace && this.tags.length) {\n                this.removeTag(this.tags.length - 1);\n            }\n        },\n\n        /**\n         * Remove the selected tag at the specified index.\n         * \n         * @param index\n         * @returns void\n         */\n        removeTag(index) {\n            let tag = this.tags[index];\n\n            if (!this.beforeRemovingTag(tag)) {\n                return false;\n            }\n\n            this.tags.splice(index, 1);\n\n            // Emit events\n            this.$nextTick(() => {\n                this.$emit('tag-removed', tag);\n                this.$emit('tags-updated');\n\n                if (this.typeaheadAlwaysShow) {\n                    this.searchTag();\n                }\n            });\n        },\n\n        /**\n         * Search the currently entered text in the list of existing tags\n         * \n         * @returns void | Boolean\n         */\n        searchTag() {\n            if (this.typeahead !== true) {\n                return false;\n            }\n\n            if (this.oldInput != this.input || (!this.searchResults.length && this.typeaheadActivationThreshold == 0) || this.typeaheadAlwaysShow || this.typeaheadShowOnFocus) {\n                this.searchResults = [];\n                this.searchSelection = 0;\n                let input = this.input.trim();\n\n                if ((input.length && input.length >= this.typeaheadActivationThreshold) || this.typeaheadActivationThreshold == 0 || this.typeaheadAlwaysShow) {\n                    // Find all the existing tags which include the search text\n                    const searchQuery = this.escapeRegExp(\n                        this.caseSensitiveTags ? input : input.toLowerCase()\n                    );\n\n                    // AJAX search\n                    if (this.typeaheadUrl.length > 0) {\n                        this.existingTags.splice();\n                        const xhttp = new XMLHttpRequest();\n                        const that = this;\n\n                        xhttp.onreadystatechange = function () {\n                            if (this.readyState == 4 && this.status == 200) {\n                                that.existingTags = JSON.parse(xhttp.responseText);\n\n                                that.doSearch(searchQuery);\n                            }\n                        }\n\n                        const endpoint = this.typeaheadUrl.replace(':search', searchQuery);\n                        xhttp.open('GET', endpoint, true);\n                        xhttp.send();\n                    } else {\n                        // Search the existing collection\n                        this.doSearch(searchQuery);\n                    }\n                }\n\n                this.oldInput = this.input;\n            }\n        },\n\n        /**\n         * Perform the actual search\n         * \n         * @param string searchQuery\n         * @return void\n         */\n        doSearch(searchQuery) {\n            for (let tag of this.existingTags) {\n                const compareable = this.caseSensitiveTags\n                    ? tag.value\n                    : tag.value.toLowerCase();\n\n                if (compareable.search(searchQuery) > -1 && ! this.tagSelected(tag)) {\n                    this.searchResults.push(tag);\n                }\n            }\n\n            // Sort the search results alphabetically\n            if (this.sortSearchResults) {\n                this.searchResults.sort((a, b) => {\n                    if (a.value < b.value) return -1;\n                    if (a.value > b.value) return 1;\n\n                    return 0;\n                });\n            }\n\n            // Shorten Search results to desired length\n            if (this.typeaheadMaxResults > 0) {\n                this.searchResults = this.searchResults.slice(\n                    0,\n                    this.typeaheadMaxResults\n                );\n            }\n        },\n\n        /**\n         * Hide the typeahead if there's nothing intered into the input field.\n         * \n         * @returns void\n         */\n        hideTypeahead() {\n            if (! this.input.length) {\n                this.$nextTick(() => {\n                    this.clearSearchResults();\n                });\n            }\n        },\n\n        /**\n         * Select the next search result in typeahead.\n         * \n         * @returns void\n         */\n        nextSearchResult() {\n            if (this.searchSelection + 1 <= this.searchResults.length - 1) {\n                this.searchSelection++;\n            }\n        },\n\n        /**\n         * Select the previous search result in typeahead.\n         * \n         * @returns void\n         */\n        prevSearchResult() {\n            if (this.searchSelection > 0) {\n                this.searchSelection--;\n            }\n        },\n\n        /**\n         * Clear/Empty the search results.\n         * \n         * @reutrns void\n         */\n        clearSearchResults(returnFocus = false) {\n            this.searchResults = [];\n            this.searchSelection = 0;\n\n            if (this.typeaheadAlwaysShow) {\n                this.$nextTick(() => {\n                    this.searchTag();\n                });\n            }\n\n            if (returnFocus) {\n                this.$refs['taginput'].focus();\n            }\n        },\n\n        /**\n         * Clear the list of selected tags.\n         * \n         * @returns void\n         */\n        clearTags() {\n            this.tags.splice(0, this.tags.length);\n        },\n\n        /**\n         * Replace the currently selected tags with the tags from the value.\n         * \n         * @returns void\n         */\n        tagsFromValue() {\n            if (this.value && this.value.length) {\n                if (!Array.isArray(this.value)) {\n                    console.error('Voerro Tags Input: the v-model value must be an array!');\n\n                    return;\n                }\n                \n                let tags = this.value;\n\n                // Don't update if nothing has changed\n                if (this.tags == tags) {\n                    return;\n                }\n\n                this.clearTags();\n\n                for (let tag of tags) {\n                    this.addTag(tag);\n                }\n            } else {\n                if (this.tags.length == 0) {\n                    return;\n                }\n\n                this.clearTags();\n            }\n        },\n\n        /**\n         * Check if a tag is already selected.\n         * \n         * @param tag\n         * @returns Boolean\n         */\n        tagSelected(tag) {\n            if (this.allowDuplicates) {\n                return false;\n            }\n\n            if (! tag) {\n                return false;\n            }\n\n            const searchQuery = this.escapeRegExp(\n                this.caseSensitiveTags ? tag.value : tag.value.toLowerCase()\n            );\n\n            for (let selectedTag of this.tags) {\n                const compareable = this.caseSensitiveTags\n                    ? selectedTag.value\n                    : selectedTag.value.toLowerCase();\n\n                if (selectedTag.key === tag.key && this.escapeRegExp(compareable).length == searchQuery.length && compareable.search(searchQuery) > -1) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Clear the input.\n         * \n         * @returns void\n         */\n        clearInput() {\n            this.input = '';\n        },\n\n        /**\n         * Process all the keyup events.\n         * \n         * @param e\n         * @returns void\n         */\n        onKeyUp(e) {\n            this.$emit('keyup', e);\n        },\n\n        /**\n         * Process all the keydown events.\n         * \n         * @param e\n         * @returns void\n         */\n        onKeyDown(e) {\n            this.$emit('keydown', e);\n        },\n\n        /**\n         * Process the onfocus event.\n         * \n         * @param e\n         * @returns void\n         */\n        onFocus(e) {\n            this.$emit('focus', e);\n\n            this.isActive = true;\n        },\n\n        /**\n         * Process the onClick event.\n         * \n         * @param e\n         * @returns void\n         */\n        onClick(e) {\n            this.$emit('click', e);\n\n            this.isActive = true;\n\n            this.searchTag();\n        },\n\n        /**\n         * Process the onblur event.\n         * \n         * @param e\n         * @returns void\n         */\n        onBlur(e) {\n            this.$emit('blur', e)\n\n            if (this.addTagsOnBlur) {\n                // Add the inputed tag\n                this.tagFromInput(true);\n            }\n\n            if (!this.typeaheadAlwaysShow) {\n                this.hideTypeahead();\n            } else {\n                this.searchTag();\n            }\n\n            this.isActive = false;\n        },\n    }\n}\n</script>\n","var render = function () {\nvar _obj;\nvar _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tags-input-root\",staticStyle:{\"position\":\"relative\"}},[_c('div',{class:( _obj = {}, _obj[_vm.wrapperClass + ' tags-input'] = true, _obj['active'] =  _vm.isActive, _obj )},[_vm._l((_vm.tags),function(tag,index){return _c('span',{key:index,staticClass:\"tags-input-badge tags-input-badge-pill tags-input-badge-selected-default\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(tag.value)}}),_vm._v(\" \"),_c('a',{staticClass:\"tags-input-remove\",attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.removeTag(index)}}})])}),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.input),expression:\"input\"},{name:\"show\",rawName:\"v-show\",value:(!_vm.hideInputField),expression:\"!hideInputField\"}],ref:\"taginput\",attrs:{\"type\":\"text\",\"placeholder\":_vm.placeholder},domProps:{\"value\":(_vm.input)},on:{\"keydown\":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }$event.preventDefault();return _vm.tagFromInput(false)},function($event){if(!$event.type.indexOf('key')&&$event.keyCode!==8){ return null; }return _vm.removeLastTag($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"down\",40,$event.key,[\"Down\",\"ArrowDown\"])){ return null; }return _vm.nextSearchResult($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"up\",38,$event.key,[\"Up\",\"ArrowUp\"])){ return null; }return _vm.prevSearchResult($event)},_vm.onKeyDown],\"keyup\":[_vm.onKeyUp,function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"esc\",27,$event.key,[\"Esc\",\"Escape\"])){ return null; }return _vm.clearSearchResults($event)}],\"focus\":_vm.onFocus,\"click\":_vm.onClick,\"blur\":_vm.onBlur,\"value\":_vm.tags,\"input\":function($event){if($event.target.composing){ return; }_vm.input=$event.target.value}}}),_vm._v(\" \"),(_vm.elementId)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.hiddenInput),expression:\"hiddenInput\"}],attrs:{\"type\":\"hidden\",\"name\":_vm.elementId,\"id\":_vm.elementId},domProps:{\"value\":(_vm.hiddenInput)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.hiddenInput=$event.target.value}}}):_vm._e()],2),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.searchResults.length),expression:\"searchResults.length\"}]},[(_vm.typeaheadStyle === 'badges')?_c('p',{class:(\"typeahead-\" + _vm.typeaheadStyle)},[(!_vm.typeaheadHideDiscard)?_c('span',{staticClass:\"tags-input-badge typeahead-hide-btn tags-input-typeahead-item-default\",domProps:{\"textContent\":_vm._s(_vm.discardSearchText)},on:{\"click\":function($event){$event.preventDefault();return _vm.clearSearchResults(true)}}}):_vm._e(),_vm._v(\" \"),_vm._l((_vm.searchResults),function(tag,index){return _c('span',{key:index,staticClass:\"tags-input-badge\",class:{\n                    'tags-input-typeahead-item-default': index != _vm.searchSelection,\n                    'tags-input-typeahead-item-highlighted-default': index == _vm.searchSelection\n                },domProps:{\"innerHTML\":_vm._s(tag.value)},on:{\"mouseover\":function($event){_vm.searchSelection = index},\"mousedown\":function($event){$event.preventDefault();return _vm.tagFromSearchOnClick(tag)}}})})],2):(_vm.typeaheadStyle === 'dropdown')?_c('ul',{class:(\"typeahead-\" + _vm.typeaheadStyle)},[(!_vm.typeaheadHideDiscard)?_c('li',{staticClass:\"tags-input-typeahead-item-default typeahead-hide-btn\",domProps:{\"textContent\":_vm._s(_vm.discardSearchText)},on:{\"click\":function($event){$event.preventDefault();return _vm.clearSearchResults(true)}}}):_vm._e(),_vm._v(\" \"),_vm._l((_vm.searchResults),function(tag,index){return _c('li',{key:index,class:{\n                'tags-input-typeahead-item-default': index != _vm.searchSelection,\n                'tags-input-typeahead-item-highlighted-default': index == _vm.searchSelection\n            },domProps:{\"innerHTML\":_vm._s(tag.value)},on:{\"mouseover\":function($event){_vm.searchSelection = index},\"mousedown\":function($event){$event.preventDefault();return _vm.tagFromSearchOnClick(tag)}}})})],2):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import VoerroTagsInput from './VoerroTagsInput.vue'\n\nwindow.VoerroTagsInput = VoerroTagsInput;\n\nexport default VoerroTagsInput;"],"sourceRoot":""}