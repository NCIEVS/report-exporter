{"remainingRequest":"/Users/bauerhs/git/report-exporter/clientui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bauerhs/git/report-exporter/clientui/src/components/ReadCodeEntry.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/bauerhs/git/report-exporter/clientui/src/components/ReadCodeEntry.vue","mtime":1590504276878},{"path":"/Users/bauerhs/git/report-exporter/clientui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bauerhs/git/report-exporter/clientui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bauerhs/git/report-exporter/clientui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/bauerhs/git/report-exporter/clientui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bauerhs/git/report-exporter/clientui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgovLyBDdXN0b20gaW5wdXQgdGFncwppbXBvcnQgVm9lcnJvVGFnc0lucHV0IGZyb20gJ0B2b2Vycm8vdnVlLXRhZ3NpbnB1dCcKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAncmVhZC1jb2RlLWVudHJ5JywKICBwcm9wczogewogICAgbXNnOiBTdHJpbmcsCiAgICBzZWxlY3RlZFRhZ3M6IFtdCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICAndGFncy1pbnB1dCc6IFZvZXJyb1RhZ3NJbnB1dAogIH0sCiAgZGF0YSgpewogICAgcmV0dXJuIHsKICAgICAgbWVzc2FnZTogJ0hlbGxvIFdvcmxkIScKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgICAgc2V0U2VsZWN0ZWRUYWdzKCkgewogICAgICAgICAgdGhpcy5zZWxlY3RlZFRhZ3MgPSBbeyBrZXk6ICdwaHAnLCB2YWx1ZTogJ1BIUCcgfV07CiAgICAgIH0sCiAgICAgIGFsZXJ0TWVzc2FnZSgpewogICAgICAgIGFsZXJ0KCJFbnRpdHkgQ29kZXMiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5zZWxlY3RlZFRhZ3MpKQogICAgfQogIH0KfQo="},{"version":3,"sources":["ReadCodeEntry.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReadCodeEntry.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"read-codes-entry\">\n\n    <div class=\"container px-lg-5\">\n      <div class=\"row row-cols-1 row justify-content-start row mx-lg-n5 py-5\">\n         <div class=\"col py-3 px-lg-5\"> </div>\n        <div class=\"col\">\n          <h5> NCI Thesaurus Entity Codes</h5>\n        </div>\n        <div class=\"col\">\n            <tags-input element-id=\"tags\"\n              v-model=\"selectedTags\"\n              \n              :add-tags-on-comma=\"true\"\n              :add-tags-on-space=\"true\"\n              :typeahead=\"false\"></tags-input>\n        </div>\n        <div class=\"col py-5\">\n            <button class=\"btn btn-primary\" v-on:click=\"alertMessage\">Search</button>\n        </div>\n      </div>\n    </div>\n  \n  </div>\n</template>\n\n<script>\n\n// Custom input tags\nimport VoerroTagsInput from '@voerro/vue-tagsinput'\n\nexport default {\n  name: 'read-code-entry',\n  props: {\n    msg: String,\n    selectedTags: []\n  },\n  components: {\n    'tags-input': VoerroTagsInput\n  },\n  data(){\n    return {\n      message: 'Hello World!'\n    }\n  },\n  methods: {\n      setSelectedTags() {\n          this.selectedTags = [{ key: 'php', value: 'PHP' }];\n      },\n      alertMessage(){\n        alert(\"Entity Codes\" + JSON.stringify(this.selectedTags))\n    }\n  }\n}\n</script>\n\n<!-- styling for the component -->\n<style>\n\n/* .col {\n  background-color: lightblue;\n} */\n\n</style>"]}]}